
import pandas as pd
import numpy as np

input_file = 'http://bit.ly/36gJKAM'
dataSet  = pd.read_csv(input_file, header=None, 
                    names = ['C1', 'C2', 'C3', 'C4']); dataSet
                    
                    
dataSet.isnull().sum(axis = 0)

dataSet2 = dataSet.drop('C1', axis=1) 

dataSet2.shape

dataSet2.isnull().sum(axis = 1)

dataSet3 = dataSet2.drop(2, axis=0)

dataSet4 = dataSet3.copy() 

dataSet4.C3.interpolate (inplace=True)

dataSet4.C4.interpolate (method='nearest', inplace=True); dataSet4.C4

dataSet5 = dataSet3.copy()
dataSet5.C3.fillna(dataSet5.C3.mean(), inplace=True)
dataSet5

dataSet5.index = range(dataSet5.shape[0])

print (dataSet5.iloc[2])
print ('...................')
print (dataSet5.iloc[2].mean())

dataSet5.iloc[2].fillna(dataSet5.iloc[2].mean(), inplace=True)

df_map = dataSet5.copy()
df_map.C2  = df_map.C2.map(
    lambda c: 'strong' if c > 60 else 'medium' if c > 40 else 'weak') 
    
    
from sklearn.preprocessing import LabelEncoder
df_lbl_enc = df_map.copy()
df_lbl_enc.C2 = LabelEncoder().fit_transform ( df_lbl_enc.C2 )


from sklearn import preprocessing
dataSet5_scaled = preprocessing.scale(dataSet5); dataSet5_scaled

df = pd.DataFrame (dataSet5_scaled, columns=['C1', 'C2', 'C3'])

preprocessing.MinMaxScaler().fit_transform(dataSet5)

np.random.seed(1234)
toScaleDS = np.ceil(100 * np.random.rand (10,3))
toScaleDS

from sklearn import preprocessing
scaledDS = preprocessing.scale(toScaleDS)
scaledDS

np.mean(scaledDS, axis = 0)

np.std(scaledDS, axis = 0)

mmScaler = preprocessing.MinMaxScaler()
mmScaler.fit_transform(toScaleDS)


# Solution S1
dataSet5.C4.fillna(dataSet5.C4.mean(), inplace=True); dataSet5


    









