# -*- coding: utf-8 -*-
"""k-Means Lab

Automatically generated by Colaboratory.

"""

from sklearn.cluster import KMeans
import numpy as np
import pandas as pd

input_file = 'http://bit.ly/315EqiY'
df=pd.read_csv(input_file, sep=' ', header=None)
df.head()

kmeansModel = KMeans(n_clusters=3, random_state=0).fit(df)

kmeansModel

kmeansModel.cluster_centers_

kmeansModel.predict ([[1,3]])

kmeansModel.predict([[6, 7], [11, 8]])

kmeansModel.labels_

list(kmeansModel.labels_).count(1)

kmeansModel = KMeans(n_clusters=3, random_state=0, verbose=True).fit(df)

kmeansModel.inertia_

km2 = KMeans(n_clusters=3, random_state=0, n_init=1, tol = 1).fit(df) 
km2.inertia_

kmeansModel.labels_ - km2.labels_

type(km2.labels_ )

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
plt.title("Visualizing kmeans ...")
plt.scatter(df[0], df[1], c=kmeansModel.labels_, cmap = 'Dark2_r');

import seaborn as sns
sns.set()
sns.scatterplot(x = df[0], y = df[1], hue=km2.labels_);

input_file = 'http://bit.ly/2O7Islk'
all = pd.read_csv(input_file, header=None, sep=',')

true_labels = all[57]

#all_features = all.iloc[:,:-1]; all_features.head()

kspam = KMeans(n_clusters=2, random_state=0).fit(all)

import sklearn.metrics as metrics
metrics.confusion_matrix(true_labels,kspam.labels_)

kspam.inertia_

